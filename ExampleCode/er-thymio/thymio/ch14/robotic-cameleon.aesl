<!DOCTYPE aesl-source>
<network>


<!--list of global events-->
<event size="2" name="ground"/>


<!--list of constants-->
<constant value="200" name="MOTOR"/>
<constant value="2400" name="RUN_PERIOD"/>
<constant value="100" name="SAMPLE_PERIOD"/>


<!--show keywords state-->
<keywords flag="false"/>


<!--node thymio-II-->
<node nodeId="55994" name="thymio-II"># Thymio-II program: robotic cameleon
# Copyright 2017 by Moti Ben-Ari
# CreativeCommons BY-SA 3.0

# Run the robot for a fixed period of time over a gray area
#   sampling with the ground sensor
# Touch center button to start

# Export the values of the sensors
#   Right click on the event "ground" and select plot
#   Click the "plot of ground" tab to display the plot window
#   Click "Save as"
# To clear before next run
#   Click "Clear" below the bottom right pane 
#   Click clear in the plot window

# Run twice: once for dark area (save as dark.txt) and
#            once for light area (save as light.txt)

# Constants
#   RUN_PERIOD    period the robot runs
#   SAMPLE_PERIOD period for sampling
#   MOTOR         motor power

# Use Python program to compute the discriminant 
#   with the best quality criterion

var discriminant = 410  # Areas of dark and light very far apart
#var discriminant = 710  # Areas of dark and light very close

var state = 0  # 0 = start, 1 = run

callsub stop

sub stop
  state = 0
  call leds.top(0,0,0)
  timer.period[0] = 0
  timer.period[1] = 0
  motor.left.target  = 0
  motor.right.target = 0

# Start on touch of center button
onevent button.center
    when button.center == 0 do
    motor.left.target = MOTOR
    motor.right.target = MOTOR
    timer.period[0] = RUN_PERIOD
    timer.period[1] = SAMPLE_PERIOD
    state = 1
  end

# Stop the run
onevent timer0
  callsub stop

# Sample the ground sensors
onevent timer1
  if state == 0 then return end
  emit ground prox.ground.delta

onevent prox
  if state == 0 then return end
  if (prox.ground.delta[0]+prox.ground.delta[1]) / 2 > discriminant then
  	 call leds.top(32,32,32)
  else
    call leds.top(32,0,32)
  end</node>


</network>
