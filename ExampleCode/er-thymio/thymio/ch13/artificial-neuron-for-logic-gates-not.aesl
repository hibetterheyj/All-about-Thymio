<!DOCTYPE aesl-source>
<network>


<!--list of global events-->


<!--list of constants-->
<constant value="1500" name="THRESHOLD"/>


<!--show keywords state-->
<keywords flag="true"/>


<!--node thymio-II-->
<node nodeId="62941" name="thymio-II"># Thymio-II program:
#   Artificial neuron for rhw logic gate "not"
# Copyright 2017 by Moti Ben-Ari
# CreativeCommons BY-SA 3.0

# This program implements an artificial neuron to simulate the "not" logic gate
# The input x1 is 1 or 0 depending on whether
#   the center sensor detect an object
# There is also a constant input of 1

# The output y is the "not" of x1
# The output is indicated by the top leds:
#   0 = white, 1 = red
# and by movement of the robot:
#   0 = not object detected, stop
#   1 = not not object detected = object detected, move

var weights[]  = [10,-20]    # Weights
var x1    # Input
var y     # Output

timer.period[0] = 100    # Milliseconds

# Activiate neuron periodically
onevent timer0
  # Get inputs: center proximity sensor > threshold
  if prox.horizontal[2] > THRESHOLD then
    x1 = 1
  else
    x1 = 0
  end

  # The neuron computes the value of y
  y = 1*weights[0] + x1*weights[1]

  # A positive value of y is a "1", otherwise "0"
  if y > 0 then
    call leds.top(32,0,0)
    motor.left.target = 0
    motor.right.target = 0
  else
    call leds.top(32,32,32)
    motor.left.target = 100
    motor.right.target = 100
  end
</node>


</network>
